# Makefile pour la gestion des tests Golden Master
# Facilite l'ex√©cution des tests en local et en CI/CD

.PHONY: help install test test-fast clean lint check-deps all

# Variables
PYTHON := python
PIP := pip
TEST_DIR := tests
PYTHON_DIR := python_accountsystem

help: ## Affiche l'aide
	@echo "üöÄ Tests Golden Master - Modernisation COBOL ‚Üí Python"
	@echo "====================================================="
	@echo ""
	@echo "Commandes disponibles:"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "  \033[36m%-15s\033[0m %s\n", $$1, $$2}'
	@echo ""

install: ## Installe les d√©pendances
	@echo "üì¶ Installation des d√©pendances..."
	$(PIP) install -r requirements.txt
	@echo "‚úÖ D√©pendances install√©es"

check-deps: ## V√©rifie les d√©pendances
	@echo "üîç V√©rification des d√©pendances..."
	$(PYTHON) -c "import approvaltests; print('‚úÖ ApprovalTests OK')" || echo "‚ùå ApprovalTests manquant"
	$(PYTHON) -c "import pytest; print('‚úÖ Pytest OK')" || echo "‚ùå Pytest manquant"
	@echo "‚úÖ V√©rification termin√©e"

lint: ## V√©rifie la qualit√© du code
	@echo "üîç V√©rification du code Python..."
	$(PYTHON) -m py_compile $(PYTHON_DIR)/*.py
	$(PYTHON) -m py_compile $(TEST_DIR)/*.py
	@echo "‚úÖ Code Python valide"

test-generate: ## G√©n√®re les fichiers received
	@echo "üîÑ G√©n√©ration des fichiers received..."
	$(PYTHON) $(TEST_DIR)/generate_received_files.py
	@echo "‚úÖ Fichiers received g√©n√©r√©s"

test-fast: test-generate ## Ex√©cute les tests Golden Master (rapide)
	@echo "üß™ Tests Golden Master (rapide)..."
	$(PYTHON) $(TEST_DIR)/test_golden_master.py

test-approval: test-generate ## Ex√©cute les tests ApprovalTests
	@echo "üìä Tests ApprovalTests..."
	$(PYTHON) -m pytest $(TEST_DIR)/test_approval.py::TestBulkComparison::test_all_cases_match_approved -v

test-visual: test-generate ## Ex√©cute les tests avec diff visuel
	@echo "üé® Tests avec diff visuel..."
	$(PYTHON) $(TEST_DIR)/test_visual_diff.py

test: test-fast ## Ex√©cute tous les tests (alias pour test-fast)

test-all: test-fast test-approval ## Ex√©cute tous les types de tests

view-diffs: ## Ouvre le visualiseur de diffs interactif
	@echo "üé® Ouverture du visualiseur de diffs..."
	$(PYTHON) $(TEST_DIR)/view_diffs.py

view-diffs-summary: ## Affiche le r√©sum√© des diffs disponibles
	@echo "üìä R√©sum√© des diffs visuels..."
	$(PYTHON) $(TEST_DIR)/view_diffs.py --summary

clean: ## Nettoie les fichiers temporaires
	@echo "üßπ Nettoyage des fichiers temporaires..."
	$(PYTHON) $(TEST_DIR)/clean_test_files.py
	@echo "‚úÖ Nettoyage termin√©"

ci-test: check-deps lint test-fast ## Pipeline CI/CD complet
	@echo ""
	@echo "üéâ PIPELINE CI/CD TERMIN√â AVEC SUCC√àS"
	@echo "====================================="
	@echo "‚úÖ D√©pendances: OK"
	@echo "‚úÖ Qualit√© du code: OK" 
	@echo "‚úÖ Tests Golden Master: OK"
	@echo ""

demo: ## D√©monstration compl√®te
	@echo "üé¨ D√âMONSTRATION DES TESTS GOLDEN MASTER"
	@echo "========================================"
	@make clean
	@make test-generate
	@make test-fast
	@echo ""
	@echo "üéØ D√©monstration termin√©e - Tous les tests passent!"

all: clean install lint test ## Pipeline complet (nettoyage + installation + tests)

# Commandes pour le d√©veloppement
dev-watch: ## Surveille les changements et relance les tests
	@echo "üëÄ Surveillance des changements (Ctrl+C pour arr√™ter)..."
	@while true; do \
		inotifywait -r -e modify $(PYTHON_DIR) $(TEST_DIR) 2>/dev/null && \
		echo "üîÑ Changement d√©tect√©, relancement des tests..." && \
		make test-fast; \
	done

status: ## Affiche le statut des tests
	@echo "üìä STATUT DES TESTS GOLDEN MASTER"
	@echo "================================"
	@echo "üìÇ Fichiers d'entr√©e: $$(ls $(TEST_DIR)/inputs/*.in 2>/dev/null | wc -l)"
	@echo "üéØ Fichiers approved: $$(ls $(TEST_DIR)/approved/*.approved.txt 2>/dev/null | wc -l)" 
	@echo "üì• Fichiers received: $$(ls $(TEST_DIR)/received/*.received.txt 2>/dev/null | wc -l)"
	@echo ""
	@if [ -d "$(TEST_DIR)/received" ]; then \
		echo "üïí Derni√®re g√©n√©ration: $$(stat -c %y $(TEST_DIR)/received 2>/dev/null || stat -f %Sm $(TEST_DIR)/received 2>/dev/null || echo 'Inconnue')"; \
	else \
		echo "‚ö†Ô∏è  Aucun fichier received trouv√© - ex√©cutez 'make test-generate'"; \
	fi

# Aide par d√©faut
.DEFAULT_GOAL := help
